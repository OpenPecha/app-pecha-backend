name: app-pecha-backend

on: [ push, pull_request,workflow_dispatch ]
jobs:
  gitleaks:
    name: Gitleaks Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run Gitleaks
        uses: dhsathiya/gitleaks-action@main
        with:
          config: .gitleaks.toml  # Optional: Use a custom config file if available
          fail: true             # Fail workflow if secrets are detected
          verbose: true          # Enable detailed output

      - name: Upload Gitleaks Report (Optional)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks-report.json

  buildDockerImage:
    name: Build and Dockerize
    runs-on: ubuntu-latest
    needs: [ gitleaks ]
    if: success()
    outputs:
      image_tag: ${{ steps.set-tag.outputs.image_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: log in Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PECHA_REPO }}
      - name: Set short git commit SHA
        id: vars
        run: |
          if [[ -n "${{ github.ref }}" && "${{ github.ref }}" =~ ^refs/tags/ ]]; then
            tagNumber=$(echo "${{ github.ref }}" | sed 's#refs/tags/##')
            echo "IMAGE_TAG=$tagNumber" >> $GITHUB_ENV
            echo "::set-output name=image_tag::$tagNumber"
          else
            calculatedSha=$(git rev-parse --short ${{ github.sha }})
            tagNumber=${{ github.run_id }}-$calculatedSha
            echo "IMAGE_TAG=$tagNumber" >> $GITHUB_ENV
            echo "::set-output name=image_tag::$tagNumber"
          fi
      - name: Confirm git commit SHA output
        run: echo ${{ env.IMAGE_TAG }}
      - name: Build Docker image in Github container registry
        run: |
          lower_owner=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          docker build -t ghcr.io/$lower_owner/pecha-backend:${{ env.IMAGE_TAG }} .
      - name: Push Docker image to GHCR
        run: |
          lower_owner=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          docker push ghcr.io/$lower_owner/pecha-backend:${{ env.IMAGE_TAG }}

  deploy:
    name: Deploy the image
    runs-on: ubuntu-latest
    needs: [ buildDockerImage ]
    steps:
      - name: Trigger Render Deployment
        run: |
          curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"