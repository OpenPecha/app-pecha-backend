"""add plan_reviews

Revision ID: 4d788090bb8f
Revises: 416948682103
Create Date: 2025-08-26 19:59:59.047427

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4d788090bb8f'
down_revision: Union[str, None] = '416948682103'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plan_reviews',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('plan_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('review_text', sa.Text(), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('rating >= 1 AND rating <= 5', name='chk_plan_reviews_rating'),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'plan_id', name='uq_plan_reviews_user_plan')
    )
    op.create_index('idx_plan_reviews_plan_approved', 'plan_reviews', ['plan_id', 'is_approved'], unique=False, postgresql_where=sa.text('is_approved = TRUE'))
    op.create_index('idx_plan_reviews_rating', 'plan_reviews', ['plan_id', 'rating'], unique=False)
    op.drop_index('idx_plans_search', table_name='plans', postgresql_using='gin')
    op.create_index('idx_plans_search', 'plans', [sa.text("to_tsvector('english', title || ' ' || COALESCE(description, ''))")], unique=False, postgresql_using='gin')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_plans_search', table_name='plans', postgresql_using='gin')
    op.create_index('idx_plans_search', 'plans', [sa.text("to_tsvector('english'::regconfig, (title::text || ' '::text) || COALESCE(description, ''::text))")], unique=False, postgresql_using='gin')
    op.drop_index('idx_plan_reviews_rating', table_name='plan_reviews')
    op.drop_index('idx_plan_reviews_plan_approved', table_name='plan_reviews', postgresql_where=sa.text('is_approved = TRUE'))
    op.drop_table('plan_reviews')
    # ### end Alembic commands ###
