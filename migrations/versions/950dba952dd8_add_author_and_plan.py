"""add_author and plan

Revision ID: 950dba952dd8
Revises: 189d5de0219a
Create Date: 2025-08-26 18:46:44.852646

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '950dba952dd8'
down_revision: Union[str, None] = '189d5de0219a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authors',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_authors_verified', 'authors', ['is_verified'], unique=False, postgresql_where=sa.text('is_verified = TRUE'))
    op.create_table('plans',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('author_id', sa.UUID(), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('featured', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_plans_discovery', 'plans', ['tags', 'is_active'], unique=False)
    op.create_index('idx_plans_featured', 'plans', ['featured'], unique=False, postgresql_where=sa.text('featured = TRUE'))
    op.create_index('idx_plans_search', 'plans', [sa.text("to_tsvector('english', title || ' ' || COALESCE(description, ''))")], unique=False, postgresql_using='gin')
    op.create_index('idx_plans_tags', 'plans', ['tags'], unique=False, postgresql_using='gin')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_plans_tags', table_name='plans', postgresql_using='gin')
    op.drop_index('idx_plans_search', table_name='plans', postgresql_using='gin')
    op.drop_index('idx_plans_featured', table_name='plans', postgresql_where=sa.text('featured = TRUE'))
    op.drop_index('idx_plans_discovery', table_name='plans')
    op.drop_table('plans')
    op.drop_index('idx_authors_verified', table_name='authors', postgresql_where=sa.text('is_verified = TRUE'))
    op.drop_table('authors')
    # ### end Alembic commands ###
